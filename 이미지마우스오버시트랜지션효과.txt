const [hoveredIndex, setHoveredIndex] = useState(null);

transition: opacity 0.5s ease-in-out;
  // styled-components를 사용하여 조건부로 스타일을 적용하는 방법. 
  // isHovered prop 값에 따라 opacity 스타일 속성을 동적으로 설정.
  opacity: ${({ isHovered }) => (isHovered ? 0 : 1)};


const Image = styled.img`
  width: 90%;
  margin:0 5%;
  transition: opacity 0.5s ease-in-out;
  opacity: ${({ isHovered }) => (isHovered ? 1 : 0)};
`;

const HoveredImage = styled.img`
  width: 90%;
  margin:0 5%;
  position: absolute;
  top: 0;
  left: 0;
`;


<Image
                src={item.image1}
                alt={item.alt}
                isHovered={hoveredIndex === index}
              />
              <HoveredImage
                src={item.image2}
                alt={item.alt}
                onMouseOver={() => setHoveredIndex(index)}
                onMouseOut={() => setHoveredIndex(null)}
                isHovered={hoveredIndex === index}
              />